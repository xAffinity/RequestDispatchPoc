{
  "contractName": "IRequest",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "getInitFunction",
      "outputs": [
        {
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.2;\n\ninterface IRequest {\n    function getInitFunction() external pure returns(bytes4);\n}",
  "sourcePath": "/Users/terenceyak/Documents/testing/contracts/interfaces/IRequest.sol",
  "ast": {
    "absolutePath": "/Users/terenceyak/Documents/testing/contracts/interfaces/IRequest.sol",
    "exportedSymbols": {
      "IRequest": [
        358
      ]
    },
    "id": 359,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 352,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 358,
        "linearizedBaseContracts": [
          358
        ],
        "name": "IRequest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 357,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getInitFunction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "74:2:9"
            },
            "returnParameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 355,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 357,
                  "src": "99:6:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 354,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "99:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "98:8:9"
            },
            "scope": 358,
            "src": "50:57:9",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 359,
        "src": "25:84:9"
      }
    ],
    "src": "0:109:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/terenceyak/Documents/testing/contracts/interfaces/IRequest.sol",
    "exportedSymbols": {
      "IRequest": [
        358
      ]
    },
    "id": 359,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 352,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 358,
        "linearizedBaseContracts": [
          358
        ],
        "name": "IRequest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 357,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getInitFunction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "74:2:9"
            },
            "returnParameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 355,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 357,
                  "src": "99:6:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 354,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "99:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "98:8:9"
            },
            "scope": 358,
            "src": "50:57:9",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 359,
        "src": "25:84:9"
      }
    ],
    "src": "0:109:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-02-02T03:39:21.642Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}